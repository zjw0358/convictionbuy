#---------------------------------------------------
# download task
#
#
#---------------------------------------------------

[download1H]
cmd=ms_feed
param=-i 1,2,3 --feed goog1h --savemd
desc=下载1H数据(goog)
func=download
type=download1


[download15m]
cmd=ms_feed
param=-i 1,2,3 --feed goog15m --savemd
desc=下载15m数据(google)
func=download
type=download1

[download1D]
cmd=ms_feed
param=-i 1,2,3  --savemd -s 2013-01-01
desc=下载1D数据(yahoo)
func=download
type=download1

[downloadpvm]
cmd=ms_pvm
param=-i 1,2,3 
desc=下载基础数据,dividend,(yahoo)
func=download
type=download1

#---------------------------------------------------
# load task
#
#
#---------------------------------------------------

[load1D]
cmd=marketscan
func=loadDataTask
param=-i 1,2,3  --loadmd  -s 2013-01-01
desc=从缓存读入yahoo 1 day数据
type=load

[load1H]
cmd=marketscan
func=loadDataTask
param=-i 1,2,3  --feed goog1h --loadmd
desc=从缓存读入goog 1 H数据
type=load


[load15m]
cmd=marketscan
func=loadDataTask
param=-i 1,2,3  --feed goog15m --loadmd
desc=从缓存读入goog 15m 数据
type=load


#------------------------------------------------------------
#  scan task
#
#
#------------------------------------------------------------
#TODO
#allow task choose sub set data from loading data
#ready to break out signal
#@only for nbar=2

[1dbuydmi]
cmd=marketscan
func=scanTask
desc=1D 短线买入,dmi指标上穿(<20tick),px上穿ma10,ma50,200，
param=-g st_sma&ma10b<20&ma10b<ma10s&px>ma200&px>ma50,st_dmi&dmi_buy<20,st_zack&erd,ms_pvm&divdate -i 1,2,3 

#filter2=-g st_sma&nbar=2&ma50b<10&ma50s>ma50b,st_dmi&dmi_buy<20&dmi_dif>1.5,ms_zack&erd --feed sina -i 1,2,3 --loadmd -s 2013-01-01

[1dbuyma50]
cmd=marketscan
func=scanTask
desc=1D 中线买入,MA10上穿MA50,px突破MA10/50
param=-g st_sma&nbar=2&ma50b<30&ma50s>ma50b&ma1050b<30&ma10b<30,st_zack&erd,ms_pvm&divdate -i 1,2,3
type=scan

[5mbuy]
cmd=marketscan
func=scanTask
desc=5m 超短线买入,MA10上穿MA50,px突破MA10/50
param=-g st_sma&nbar=2&ma50b<30&ma50s>ma50b&ma1050b<30&ma10b<30 --feed sina5m -i 1,2,3 
type=manual
#再加入其他指标，K线阳，MACD露头

[15mbuy]
cmd=marketscan
func=scanTask
desc=15m 超短线买入,MA10上穿MA50,px突破MA10/50
param=-g st_sma&nbar=2&ma50b<10&ma50s>ma50b&ma1050b<10&ma10b<10 --feed goog15m -i 1,2,3 
type=manual


[1dbuyma50pullback]
cmd=marketscan
func=scanTask
param=-g st_sma&nbar=2&ma50b<30&ma50s>ma50b&ma1050b<30&ma10b<30&sup50<30&sup50<res50&ma50,st_zack&erd -i 1,2,3
desc=突破MA50后回测支撑线幅度为2
type=scan

[1dsellma50]
cmd=marketscan
func=scanTask
param=-g st_sma&ma10s<20&ma10b>ma10s&ma50s<5&ma50b>ma50s&ma1050s<5&ma1050b>ma1050s,st_zack&erd -i 1,2,3
desc=1D sell,px跌穿ma10,50以及ma10下穿ma50,中线较强看跌信号
type=scan

[1hbuydmima50]
cmd=marketscan
func=scanTask
param=-g st_sma&nbar=2&ma50b<20&ma50s>ma50b,st_dmi&dmi_buy<20&dmi_dif>1.5,st_zack&erd --feed goog1h -i 1,2,3
desc=超短线买入信号,上穿ma50,dmi>1.5
type=scan

[greenline]
cmd=marketscan
func=scanTask
param=-g st_greenline&@sctrrank>75&@money_wave<30 -i 1,2,3 
desc=长线强势股，rsi需优化,上穿30
type=scan

[glbuy]
cmd=marketscan
func=scanTask
param=-g st_greenline&@sctr_buy<sctr_sell&sctr_buy<20 -i 1,2,3
desc=greenline sctr信号由负转正.中线买入信号但需要短线信号出现(1D/1H)
type=scan

[goldencross]
cmd=marketscan
func=scanTask
param=-g st_sma&@ma50200b<10&ma50200b<ma50200s -i 1,2,3
desc=ma50上穿ma200，长线看涨信号，需要注意延迟较大，股价如果无法快速摆脱均线时则可能转成假突破
type=scan

[deathcross]
cmd=marketscan
func=scanTask
param=-g st_sma&ma50200s<20&ma50200b>ma50200s&ma50&ma200 -i 1,2,3 
desc=ma50下穿ma200，长线看跌信号
type=scan


[perf]
cmd=marketscan
func=scanTask
param=-g st_sma&merge,st_perf&sorts -i 1,2,3
desc=按名字列出所有symbol的performance
type=scan

#------------------------------------------------------------
#  manual task
#
#
#------------------------------------------------------------
[ohlc]
cmd=marketscan
func=printOhlcTask
param=-t JNJ --feed goog15m
desc=打印symbol的ohlc数据，可以'printohlc aapl'自行显示列表
type=manual

[download5msina]
cmd=ms_feed
param=-i 1,2,3 --feed sina5m --savemd
desc=下载5m数据(sina)
func=process
type=manual

[load5msina]
cmd=marketscan
func=loadDataTask
param=-i 1,2,3  --feed sina5m --loadmd
desc=从缓存读入sina 5m 数据
type=manual

[download1Hsina]
cmd=ms_feed
param=-i 1,2,3 --feed sina --savemd
desc=下载1H数据(sina)
func=process
type=manual

[load1Hsina]
cmd=marketscan
func=loadDataTask
param=-i 1,2,3  --feed sina --loadmd
desc=从缓存读入sina 1 H数据
type=manual
